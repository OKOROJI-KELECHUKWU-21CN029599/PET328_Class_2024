#TTOWG

def classify_block(i, j, nx, ny):
    """
    Classifies a gridblock in a discretized oil reservoir based on its position relative to the boundaries.
    
    Args:
        i (int): Column index of the gridblock.
        j (int): Row index of the gridblock.
        nx (int): Number of columns in the discretized reservoir.
        ny (int): Number of rows in the discretized reservoir.
        
    Returns:
        str: The category of the gridblock ('I', 'II', 'III', 'IV').
    """
    # Classify gridblock
    if (i == 1 and j == 1) or (i == 1 and j == ny) or (i == nx and j == 1) or (i == nx and j == ny):
        return 'IV'
    elif j == 1 or j == ny:
        return 'II'
    elif i == 1 or i == nx:
        return 'III'
    else:
        return 'I'

# Receive inputs from user:
i = int(input('What is the column index of the gridblock? '))
j = int(input('What is the row index of the gridblock? '))
nx = int(input('How many columns are there in the discretized reservoir? '))
ny = int(input('How many rows are there in the discretized reservoir? '))

# Call the classify_block function and store the result in block_cat
block_cat = classify_block(i, j, nx, ny)

# Print the category of the gridblock
print('The category of the gridblock is:', block_cat)
